{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * Created by j_bleach on 2018/8/6.\n */\n\n\nimport React from \"react\";\n\nvar RenderCanvas = function RenderCanvas(Target) {\n  return function (_Target) {\n    _inherits(RenderCanvasClass, _Target);\n\n    function RenderCanvasClass(props) {\n      _classCallCheck(this, RenderCanvasClass);\n\n      var _this = _possibleConstructorReturn(this, (RenderCanvasClass.__proto__ || Object.getPrototypeOf(RenderCanvasClass)).call(this, props));\n\n      _this.renderCurve = function () {\n        var _this$props = _this.props,\n            height = _this$props.height,\n            width = _this$props.width;\n        _this.animationId = window.requestAnimationFrame(_this.renderCurve); // 定时动画\n\n        var bufferLength = _this.analyser.fftSize; // 默认为2048\n\n        var dataArray = new Uint8Array(bufferLength); // console.log(\"data\",dataArray)\n\n        _this.analyser.getByteTimeDomainData(dataArray); // 将音频信息存储在长度为2048（默认）的类型数组（dataArray）\n\n\n        _this.configCanvas();\n\n        var sliceWidth = Number(width) / bufferLength;\n        var x = 0;\n\n        _this.canvasCtx.moveTo(x, height / 2);\n\n        for (var i = 0; i < bufferLength; i++) {\n          var v = dataArray[i] / 128.0;\n          var y = v * height / 2;\n\n          _this.canvasCtx[\"lineTo\"](x, y);\n\n          x += sliceWidth;\n        }\n\n        _this.canvasCtx.lineTo(width, height / 2);\n\n        _this.canvasCtx.stroke();\n      };\n\n      _this.canvasRef = React.createRef(); // react ref\n\n      _this.canvasCtx = null; // canvas 上下文\n\n      _this.animationId = null;\n      return _this;\n    }\n\n    _createClass(RenderCanvasClass, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.initCanvas();\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        window.cancelAnimationFrame(this.animationId); //组件销毁前，注销定时动画\n      }\n      /**\n       * @author j_bleach 2018/8/18\n       * @describe canvas 配置\n       */\n\n    }, {\n      key: \"configCanvas\",\n      value: function configCanvas() {\n        var _props = this.props,\n            height = _props.height,\n            width = _props.width,\n            backgroundColor = _props.backgroundColor,\n            strokeColor = _props.strokeColor;\n        var canvas = this.canvasRef.current;\n        this.canvasCtx = canvas.getContext(\"2d\");\n        this.canvasCtx.clearRect(0, 0, width, height);\n        this.canvasCtx.fillStyle = backgroundColor;\n        this.canvasCtx.fillRect(0, 0, width, height);\n        this.canvasCtx.lineWidth = 2;\n        this.canvasCtx.strokeStyle = strokeColor;\n        this.canvasCtx.beginPath();\n      }\n      /**\n       * @author j_bleach 2018/8/18\n       * @describe 画布初始化,停止动画\n       */\n\n    }, {\n      key: \"initCanvas\",\n      value: function initCanvas() {\n        window.cancelAnimationFrame(this.animationId);\n        var _props2 = this.props,\n            height = _props2.height,\n            width = _props2.width;\n        this.configCanvas();\n        this.canvasCtx.moveTo(0, height / 2);\n        this.canvasCtx.lineTo(width, height / 2);\n        this.canvasCtx.stroke();\n      }\n      /**\n       * @author j_bleach 2018/8/18\n       * @describe 动态绘制音频曲线\n       */\n\n    }, {\n      key: \"renderCanvas\",\n\n      /**\n       * @author j_bleach 2018/8/18\n       * @describe 初始化渲染canvas节点\n       */\n      value: function renderCanvas() {\n        var _props3 = this.props,\n            height = _props3.height,\n            width = _props3.width;\n        return React.createElement(\"canvas\", {\n          ref: this.canvasRef,\n          height: height,\n          width: width,\n          style: {\n            width: width,\n            height: height\n          }\n        });\n      }\n    }]);\n\n    return RenderCanvasClass;\n  }(Target);\n};\n\nexport default RenderCanvas;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAGA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,eAAe,SAAfA,YAAe,SAAU;EAC3B;IAAAC;;IAEI,2BAAYC,KAAZ,EAAmB;MAAAC;;MAAA,kIACTD,KADS;;MAAAE,MAgDnBC,WAhDmB,GAgDL,YAAM;QAAA,kBACQD,MAAKF,KADb;QAAA,IACTI,MADS,eACTA,MADS;QAAA,IACDC,KADC,eACDA,KADC;QAEhBH,MAAKI,WAAL,GAAmBC,OAAOC,qBAAPD,CAA6BL,MAAKC,WAAlCI,CAAnB,CAFgB,CAEmD;;QACnE,IAAME,eAAeP,MAAKQ,QAAL,CAAcC,OAAnC,CAHgB,CAG4B;;QAC5C,IAAMC,YAAY,IAAIC,UAAJ,CAAeJ,YAAf,CAAlB,CAJgB,CAKhB;;QACAP,MAAKQ,QAAL,CAAcI,qBAAd,CAAoCF,SAApC,EANgB,CAM+B;;;QAC/CV,MAAKa,YAAL;;QACA,IAAMC,aAAaC,OAAOZ,KAAPY,IAAgBR,YAAnC;QACA,IAAIS,IAAI,CAAR;;QACAhB,MAAKiB,SAAL,CAAeC,MAAf,CAAsBF,CAAtB,EAAyBd,SAAS,CAAlC;;QACA,KAAK,IAAIiB,IAAI,CAAb,EAAgBA,IAAIZ,YAApB,EAAkCY,GAAlC,EAAuC;UACnC,IAAMC,IAAIV,UAAUS,CAAVT,IAAe,KAAzB;UACA,IAAMW,IAAID,IAAIlB,MAAJkB,GAAa,CAAvB;;UACApB,MAAKiB,SAAL,CAAe,QAAf,EAAyBD,CAAzB,EAA4BK,CAA5B;;UACAL,KAAKF,UAALE;QACH;;QACDhB,MAAKiB,SAAL,CAAeK,MAAf,CAAsBnB,KAAtB,EAA6BD,SAAS,CAAtC;;QACAF,MAAKiB,SAAL,CAAeM,MAAf;MAlEe;;MAEfvB,MAAKwB,SAAL,GAAiB7B,MAAM8B,SAAN9B,EAAjB,CAFe,CAEoB;;MACnCK,MAAKiB,SAAL,GAAiB,IAAjB,CAHe,CAGQ;;MACvBjB,MAAKI,WAAL,GAAmB,IAAnB;MAJe;IAKlB;;IAPLsB;MAAAC;MAAAC,oCASwB;QAChB,KAAKC,UAAL;MACH;IAXL;MAAAF;MAAAC,uCAa2B;QACnBvB,OAAOyB,oBAAPzB,CAA4B,KAAKD,WAAjCC,EADmB,CAC4B;MAClD;MAED;;;;;IAjBJ;MAAAsB;MAAAC,+BAqBmB;QAAA,aAC2C,KAAK9B,KADhD;QAAA,IACJI,MADI,UACJA,MADI;QAAA,IACIC,KADJ,UACIA,KADJ;QAAA,IACW4B,eADX,UACWA,eADX;QAAA,IAC4BC,WAD5B,UAC4BA,WAD5B;QAEX,IAAMC,SAAS,KAAKT,SAAL,CAAeU,OAA9B;QACA,KAAKjB,SAAL,GAAiBgB,OAAOE,UAAPF,CAAkB,IAAlBA,CAAjB;QACA,KAAKhB,SAAL,CAAemB,SAAf,CAAyB,CAAzB,EAA4B,CAA5B,EAA+BjC,KAA/B,EAAsCD,MAAtC;QACA,KAAKe,SAAL,CAAeoB,SAAf,GAA2BN,eAA3B;QACA,KAAKd,SAAL,CAAeqB,QAAf,CAAwB,CAAxB,EAA2B,CAA3B,EAA8BnC,KAA9B,EAAqCD,MAArC;QACA,KAAKe,SAAL,CAAesB,SAAf,GAA2B,CAA3B;QACA,KAAKtB,SAAL,CAAeuB,WAAf,GAA6BR,WAA7B;QACA,KAAKf,SAAL,CAAewB,SAAf;MACH;MAED;;;;;IAjCJ;MAAAd;MAAAC,6BAqCiB;QACTvB,OAAOyB,oBAAPzB,CAA4B,KAAKD,WAAjCC;QADS,cAEe,KAAKP,KAFpB;QAAA,IAEFI,MAFE,WAEFA,MAFE;QAAA,IAEMC,KAFN,WAEMA,KAFN;QAGT,KAAKU,YAAL;QACA,KAAKI,SAAL,CAAeC,MAAf,CAAsB,CAAtB,EAAyBhB,SAAS,CAAlC;QACA,KAAKe,SAAL,CAAeK,MAAf,CAAsBnB,KAAtB,EAA6BD,SAAS,CAAtC;QACA,KAAKe,SAAL,CAAeM,MAAf;MACH;MAED;;;;;IA9CJ;MAAAI;;MAuEI;;;;MAvEJC,+BA2EmB;QAAA,cACa,KAAK9B,KADlB;QAAA,IACJI,MADI,WACJA,MADI;QAAA,IACIC,KADJ,WACIA,KADJ;QAEX,OAAOR;UAAQ+C,KAAK,KAAKlB,SAAlB;UAA6BtB,QAAQA,MAArC;UAA6CC,OAAOA,KAApD;UACQwC,OAAO;YAACxC,OAAOA,KAAR;YAAeD,QAAQA;UAAvB;QADf,EAAP;MAEH;IA/EL;;IAAA;EAAA,EAAuC0C,MAAvC;AADJ;;AAmFA,eAAehD,YAAf","names":["React","RenderCanvas","_inherits","props","_classCallCheck","_this","renderCurve","height","width","animationId","window","requestAnimationFrame","bufferLength","analyser","fftSize","dataArray","Uint8Array","getByteTimeDomainData","configCanvas","sliceWidth","Number","x","canvasCtx","moveTo","i","v","y","lineTo","stroke","canvasRef","createRef","_createClass","key","value","initCanvas","cancelAnimationFrame","backgroundColor","strokeColor","canvas","current","getContext","clearRect","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","ref","style","Target"],"sources":["/Users/le-taoli/emotiondetecttemp/front/node_modules/react-audio-analyser/src/component/AudioAnalyser/RenderCanvas.js"],"sourcesContent":["/**\n * Created by j_bleach on 2018/8/6.\n */\nimport React from \"react\";\n\nconst RenderCanvas = Target => {\n    return class RenderCanvasClass extends Target {\n\n        constructor(props) {\n            super(props)\n            this.canvasRef = React.createRef() // react ref\n            this.canvasCtx = null; // canvas 上下文\n            this.animationId = null;\n        }\n\n        componentDidMount() {\n            this.initCanvas();\n        }\n\n        componentWillUnmount() {\n            window.cancelAnimationFrame(this.animationId); //组件销毁前，注销定时动画\n        }\n\n        /**\n         * @author j_bleach 2018/8/18\n         * @describe canvas 配置\n         */\n        configCanvas() {\n            const {height, width, backgroundColor, strokeColor} = this.props;\n            const canvas = this.canvasRef.current;\n            this.canvasCtx = canvas.getContext(\"2d\");\n            this.canvasCtx.clearRect(0, 0, width, height);\n            this.canvasCtx.fillStyle = backgroundColor;\n            this.canvasCtx.fillRect(0, 0, width, height);\n            this.canvasCtx.lineWidth = 2;\n            this.canvasCtx.strokeStyle = strokeColor;\n            this.canvasCtx.beginPath();\n        }\n\n        /**\n         * @author j_bleach 2018/8/18\n         * @describe 画布初始化,停止动画\n         */\n        initCanvas() {\n            window.cancelAnimationFrame(this.animationId);\n            const {height, width} = this.props;\n            this.configCanvas();\n            this.canvasCtx.moveTo(0, height / 2);\n            this.canvasCtx.lineTo(width, height / 2);\n            this.canvasCtx.stroke();\n        }\n\n        /**\n         * @author j_bleach 2018/8/18\n         * @describe 动态绘制音频曲线\n         */\n        renderCurve = () => {\n            const {height, width} = this.props;\n            this.animationId = window.requestAnimationFrame(this.renderCurve); // 定时动画\n            const bufferLength = this.analyser.fftSize; // 默认为2048\n            const dataArray = new Uint8Array(bufferLength);\n            // console.log(\"data\",dataArray)\n            this.analyser.getByteTimeDomainData(dataArray);// 将音频信息存储在长度为2048（默认）的类型数组（dataArray）\n            this.configCanvas();\n            const sliceWidth = Number(width) / bufferLength;\n            let x = 0;\n            this.canvasCtx.moveTo(x, height / 2);\n            for (let i = 0; i < bufferLength; i++) {\n                const v = dataArray[i] / 128.0;\n                const y = v * height / 2;\n                this.canvasCtx[\"lineTo\"](x, y);\n                x += sliceWidth;\n            }\n            this.canvasCtx.lineTo(width, height / 2);\n            this.canvasCtx.stroke();\n        }\n\n        /**\n         * @author j_bleach 2018/8/18\n         * @describe 初始化渲染canvas节点\n         */\n        renderCanvas() {\n            const {height, width} = this.props;\n            return <canvas ref={this.canvasRef} height={height} width={width}\n                           style={{width: width, height: height}}/>\n        }\n    }\n}\nexport default RenderCanvas;\n"]},"metadata":{},"sourceType":"module"}