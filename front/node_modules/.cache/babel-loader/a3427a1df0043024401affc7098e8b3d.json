{"ast":null,"code":"'use strict';\n\nconst fs = require('graceful-fs');\n\nconst path = require('path');\n\nconst mkdirsSync = require('../mkdirs').mkdirsSync;\n\nconst utimesMillisSync = require('../util/utimes').utimesMillisSync;\n\nconst stat = require('../util/stat');\n\nfunction copySync(src, dest, opts) {\n  if (typeof opts === 'function') {\n    opts = {\n      filter: opts\n    };\n  }\n\n  opts = opts || {};\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true; // default to true for now\n\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber; // overwrite falls back to clobber\n  // Warn about using preserveTimestamps on 32-bit node\n\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    process.emitWarning('Using the preserveTimestamps option in 32-bit node is not recommended;\\n\\n' + '\\tsee https://github.com/jprichardson/node-fs-extra/issues/269', 'Warning', 'fs-extra-WARN0002');\n  }\n\n  const {\n    srcStat,\n    destStat\n  } = stat.checkPathsSync(src, dest, 'copy', opts);\n  stat.checkParentPathsSync(src, srcStat, dest, 'copy');\n  return handleFilterAndCopy(destStat, src, dest, opts);\n}\n\nfunction handleFilterAndCopy(destStat, src, dest, opts) {\n  if (opts.filter && !opts.filter(src, dest)) return;\n  const destParent = path.dirname(dest);\n  if (!fs.existsSync(destParent)) mkdirsSync(destParent);\n  return getStats(destStat, src, dest, opts);\n}\n\nfunction startCopy(destStat, src, dest, opts) {\n  if (opts.filter && !opts.filter(src, dest)) return;\n  return getStats(destStat, src, dest, opts);\n}\n\nfunction getStats(destStat, src, dest, opts) {\n  const statSync = opts.dereference ? fs.statSync : fs.lstatSync;\n  const srcStat = statSync(src);\n  if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts);else if (srcStat.isFile() || srcStat.isCharacterDevice() || srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts);else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts);else if (srcStat.isSocket()) throw new Error(`Cannot copy a socket file: ${src}`);else if (srcStat.isFIFO()) throw new Error(`Cannot copy a FIFO pipe: ${src}`);\n  throw new Error(`Unknown file: ${src}`);\n}\n\nfunction onFile(srcStat, destStat, src, dest, opts) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts);\n  return mayCopyFile(srcStat, src, dest, opts);\n}\n\nfunction mayCopyFile(srcStat, src, dest, opts) {\n  if (opts.overwrite) {\n    fs.unlinkSync(dest);\n    return copyFile(srcStat, src, dest, opts);\n  } else if (opts.errorOnExist) {\n    throw new Error(`'${dest}' already exists`);\n  }\n}\n\nfunction copyFile(srcStat, src, dest, opts) {\n  fs.copyFileSync(src, dest);\n  if (opts.preserveTimestamps) handleTimestamps(srcStat.mode, src, dest);\n  return setDestMode(dest, srcStat.mode);\n}\n\nfunction handleTimestamps(srcMode, src, dest) {\n  // Make sure the file is writable before setting the timestamp\n  // otherwise open fails with EPERM when invoked with 'r+'\n  // (through utimes call)\n  if (fileIsNotWritable(srcMode)) makeFileWritable(dest, srcMode);\n  return setDestTimestamps(src, dest);\n}\n\nfunction fileIsNotWritable(srcMode) {\n  return (srcMode & 0o200) === 0;\n}\n\nfunction makeFileWritable(dest, srcMode) {\n  return setDestMode(dest, srcMode | 0o200);\n}\n\nfunction setDestMode(dest, srcMode) {\n  return fs.chmodSync(dest, srcMode);\n}\n\nfunction setDestTimestamps(src, dest) {\n  // The initial srcStat.atime cannot be trusted\n  // because it is modified by the read(2) system call\n  // (See https://nodejs.org/api/fs.html#fs_stat_time_values)\n  const updatedSrcStat = fs.statSync(src);\n  return utimesMillisSync(dest, updatedSrcStat.atime, updatedSrcStat.mtime);\n}\n\nfunction onDir(srcStat, destStat, src, dest, opts) {\n  if (!destStat) return mkDirAndCopy(srcStat.mode, src, dest, opts);\n  return copyDir(src, dest, opts);\n}\n\nfunction mkDirAndCopy(srcMode, src, dest, opts) {\n  fs.mkdirSync(dest);\n  copyDir(src, dest, opts);\n  return setDestMode(dest, srcMode);\n}\n\nfunction copyDir(src, dest, opts) {\n  fs.readdirSync(src).forEach(item => copyDirItem(item, src, dest, opts));\n}\n\nfunction copyDirItem(item, src, dest, opts) {\n  const srcItem = path.join(src, item);\n  const destItem = path.join(dest, item);\n  const {\n    destStat\n  } = stat.checkPathsSync(srcItem, destItem, 'copy', opts);\n  return startCopy(destStat, srcItem, destItem, opts);\n}\n\nfunction onLink(destStat, src, dest, opts) {\n  let resolvedSrc = fs.readlinkSync(src);\n\n  if (opts.dereference) {\n    resolvedSrc = path.resolve(process.cwd(), resolvedSrc);\n  }\n\n  if (!destStat) {\n    return fs.symlinkSync(resolvedSrc, dest);\n  } else {\n    let resolvedDest;\n\n    try {\n      resolvedDest = fs.readlinkSync(dest);\n    } catch (err) {\n      // dest exists and is a regular file or directory,\n      // Windows may throw UNKNOWN error. If dest already exists,\n      // fs throws error anyway, so no need to guard against it here.\n      if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlinkSync(resolvedSrc, dest);\n      throw err;\n    }\n\n    if (opts.dereference) {\n      resolvedDest = path.resolve(process.cwd(), resolvedDest);\n    }\n\n    if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n      throw new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`);\n    } // prevent copy if src is a subdir of dest since unlinking\n    // dest in this case would result in removing src contents\n    // and therefore a broken symlink would be created.\n\n\n    if (fs.statSync(dest).isDirectory() && stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n      throw new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`);\n    }\n\n    return copyLink(resolvedSrc, dest);\n  }\n}\n\nfunction copyLink(resolvedSrc, dest) {\n  fs.unlinkSync(dest);\n  return fs.symlinkSync(resolvedSrc, dest);\n}\n\nmodule.exports = copySync;","map":{"version":3,"names":["fs","require","path","mkdirsSync","utimesMillisSync","stat","copySync","src","dest","opts","filter","clobber","overwrite","preserveTimestamps","process","arch","emitWarning","srcStat","destStat","checkPathsSync","checkParentPathsSync","handleFilterAndCopy","destParent","dirname","existsSync","getStats","startCopy","statSync","dereference","lstatSync","isDirectory","onDir","isFile","isCharacterDevice","isBlockDevice","onFile","isSymbolicLink","onLink","isSocket","Error","isFIFO","copyFile","mayCopyFile","unlinkSync","errorOnExist","copyFileSync","handleTimestamps","mode","setDestMode","srcMode","fileIsNotWritable","makeFileWritable","setDestTimestamps","chmodSync","updatedSrcStat","atime","mtime","mkDirAndCopy","copyDir","mkdirSync","readdirSync","forEach","item","copyDirItem","srcItem","join","destItem","resolvedSrc","readlinkSync","resolve","cwd","symlinkSync","resolvedDest","err","code","isSrcSubdir","copyLink","module","exports"],"sources":["/Users/le-taoli/emotiondetecttemp/front/node_modules/fs-extra/lib/copy/copy-sync.js"],"sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdirsSync = require('../mkdirs').mkdirsSync\nconst utimesMillisSync = require('../util/utimes').utimesMillisSync\nconst stat = require('../util/stat')\n\nfunction copySync (src, dest, opts) {\n  if (typeof opts === 'function') {\n    opts = { filter: opts }\n  }\n\n  opts = opts || {}\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    process.emitWarning(\n      'Using the preserveTimestamps option in 32-bit node is not recommended;\\n\\n' +\n      '\\tsee https://github.com/jprichardson/node-fs-extra/issues/269',\n      'Warning', 'fs-extra-WARN0002'\n    )\n  }\n\n  const { srcStat, destStat } = stat.checkPathsSync(src, dest, 'copy', opts)\n  stat.checkParentPathsSync(src, srcStat, dest, 'copy')\n  return handleFilterAndCopy(destStat, src, dest, opts)\n}\n\nfunction handleFilterAndCopy (destStat, src, dest, opts) {\n  if (opts.filter && !opts.filter(src, dest)) return\n  const destParent = path.dirname(dest)\n  if (!fs.existsSync(destParent)) mkdirsSync(destParent)\n  return getStats(destStat, src, dest, opts)\n}\n\nfunction startCopy (destStat, src, dest, opts) {\n  if (opts.filter && !opts.filter(src, dest)) return\n  return getStats(destStat, src, dest, opts)\n}\n\nfunction getStats (destStat, src, dest, opts) {\n  const statSync = opts.dereference ? fs.statSync : fs.lstatSync\n  const srcStat = statSync(src)\n\n  if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isFile() ||\n           srcStat.isCharacterDevice() ||\n           srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts)\n  else if (srcStat.isSocket()) throw new Error(`Cannot copy a socket file: ${src}`)\n  else if (srcStat.isFIFO()) throw new Error(`Cannot copy a FIFO pipe: ${src}`)\n  throw new Error(`Unknown file: ${src}`)\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts)\n  return mayCopyFile(srcStat, src, dest, opts)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts) {\n  if (opts.overwrite) {\n    fs.unlinkSync(dest)\n    return copyFile(srcStat, src, dest, opts)\n  } else if (opts.errorOnExist) {\n    throw new Error(`'${dest}' already exists`)\n  }\n}\n\nfunction copyFile (srcStat, src, dest, opts) {\n  fs.copyFileSync(src, dest)\n  if (opts.preserveTimestamps) handleTimestamps(srcStat.mode, src, dest)\n  return setDestMode(dest, srcStat.mode)\n}\n\nfunction handleTimestamps (srcMode, src, dest) {\n  // Make sure the file is writable before setting the timestamp\n  // otherwise open fails with EPERM when invoked with 'r+'\n  // (through utimes call)\n  if (fileIsNotWritable(srcMode)) makeFileWritable(dest, srcMode)\n  return setDestTimestamps(src, dest)\n}\n\nfunction fileIsNotWritable (srcMode) {\n  return (srcMode & 0o200) === 0\n}\n\nfunction makeFileWritable (dest, srcMode) {\n  return setDestMode(dest, srcMode | 0o200)\n}\n\nfunction setDestMode (dest, srcMode) {\n  return fs.chmodSync(dest, srcMode)\n}\n\nfunction setDestTimestamps (src, dest) {\n  // The initial srcStat.atime cannot be trusted\n  // because it is modified by the read(2) system call\n  // (See https://nodejs.org/api/fs.html#fs_stat_time_values)\n  const updatedSrcStat = fs.statSync(src)\n  return utimesMillisSync(dest, updatedSrcStat.atime, updatedSrcStat.mtime)\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts) {\n  if (!destStat) return mkDirAndCopy(srcStat.mode, src, dest, opts)\n  return copyDir(src, dest, opts)\n}\n\nfunction mkDirAndCopy (srcMode, src, dest, opts) {\n  fs.mkdirSync(dest)\n  copyDir(src, dest, opts)\n  return setDestMode(dest, srcMode)\n}\n\nfunction copyDir (src, dest, opts) {\n  fs.readdirSync(src).forEach(item => copyDirItem(item, src, dest, opts))\n}\n\nfunction copyDirItem (item, src, dest, opts) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  const { destStat } = stat.checkPathsSync(srcItem, destItem, 'copy', opts)\n  return startCopy(destStat, srcItem, destItem, opts)\n}\n\nfunction onLink (destStat, src, dest, opts) {\n  let resolvedSrc = fs.readlinkSync(src)\n  if (opts.dereference) {\n    resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n  }\n\n  if (!destStat) {\n    return fs.symlinkSync(resolvedSrc, dest)\n  } else {\n    let resolvedDest\n    try {\n      resolvedDest = fs.readlinkSync(dest)\n    } catch (err) {\n      // dest exists and is a regular file or directory,\n      // Windows may throw UNKNOWN error. If dest already exists,\n      // fs throws error anyway, so no need to guard against it here.\n      if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlinkSync(resolvedSrc, dest)\n      throw err\n    }\n    if (opts.dereference) {\n      resolvedDest = path.resolve(process.cwd(), resolvedDest)\n    }\n    if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n      throw new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`)\n    }\n\n    // prevent copy if src is a subdir of dest since unlinking\n    // dest in this case would result in removing src contents\n    // and therefore a broken symlink would be created.\n    if (fs.statSync(dest).isDirectory() && stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n      throw new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`)\n    }\n    return copyLink(resolvedSrc, dest)\n  }\n}\n\nfunction copyLink (resolvedSrc, dest) {\n  fs.unlinkSync(dest)\n  return fs.symlinkSync(resolvedSrc, dest)\n}\n\nmodule.exports = copySync\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}