{"ast":null,"code":"'use strict';\n\nconst u = require('universalify').fromCallback;\n\nconst path = require('path');\n\nconst fs = require('graceful-fs');\n\nconst mkdir = require('../mkdirs');\n\nconst pathExists = require('../path-exists').pathExists;\n\nconst {\n  areIdentical\n} = require('../util/stat');\n\nfunction createLink(srcpath, dstpath, callback) {\n  function makeLink(srcpath, dstpath) {\n    fs.link(srcpath, dstpath, err => {\n      if (err) return callback(err);\n      callback(null);\n    });\n  }\n\n  fs.lstat(dstpath, (_, dstStat) => {\n    fs.lstat(srcpath, (err, srcStat) => {\n      if (err) {\n        err.message = err.message.replace('lstat', 'ensureLink');\n        return callback(err);\n      }\n\n      if (dstStat && areIdentical(srcStat, dstStat)) return callback(null);\n      const dir = path.dirname(dstpath);\n      pathExists(dir, (err, dirExists) => {\n        if (err) return callback(err);\n        if (dirExists) return makeLink(srcpath, dstpath);\n        mkdir.mkdirs(dir, err => {\n          if (err) return callback(err);\n          makeLink(srcpath, dstpath);\n        });\n      });\n    });\n  });\n}\n\nfunction createLinkSync(srcpath, dstpath) {\n  let dstStat;\n\n  try {\n    dstStat = fs.lstatSync(dstpath);\n  } catch {}\n\n  try {\n    const srcStat = fs.lstatSync(srcpath);\n    if (dstStat && areIdentical(srcStat, dstStat)) return;\n  } catch (err) {\n    err.message = err.message.replace('lstat', 'ensureLink');\n    throw err;\n  }\n\n  const dir = path.dirname(dstpath);\n  const dirExists = fs.existsSync(dir);\n  if (dirExists) return fs.linkSync(srcpath, dstpath);\n  mkdir.mkdirsSync(dir);\n  return fs.linkSync(srcpath, dstpath);\n}\n\nmodule.exports = {\n  createLink: u(createLink),\n  createLinkSync\n};","map":{"version":3,"names":["u","require","fromCallback","path","fs","mkdir","pathExists","areIdentical","createLink","srcpath","dstpath","callback","makeLink","link","err","lstat","_","dstStat","srcStat","message","replace","dir","dirname","dirExists","mkdirs","createLinkSync","lstatSync","existsSync","linkSync","mkdirsSync","module","exports"],"sources":["/Users/le-taoli/emotiondetecttemp/front/node_modules/fs-extra/lib/ensure/link.js"],"sourcesContent":["'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\nconst { areIdentical } = require('../util/stat')\n\nfunction createLink (srcpath, dstpath, callback) {\n  function makeLink (srcpath, dstpath) {\n    fs.link(srcpath, dstpath, err => {\n      if (err) return callback(err)\n      callback(null)\n    })\n  }\n\n  fs.lstat(dstpath, (_, dstStat) => {\n    fs.lstat(srcpath, (err, srcStat) => {\n      if (err) {\n        err.message = err.message.replace('lstat', 'ensureLink')\n        return callback(err)\n      }\n      if (dstStat && areIdentical(srcStat, dstStat)) return callback(null)\n\n      const dir = path.dirname(dstpath)\n      pathExists(dir, (err, dirExists) => {\n        if (err) return callback(err)\n        if (dirExists) return makeLink(srcpath, dstpath)\n        mkdir.mkdirs(dir, err => {\n          if (err) return callback(err)\n          makeLink(srcpath, dstpath)\n        })\n      })\n    })\n  })\n}\n\nfunction createLinkSync (srcpath, dstpath) {\n  let dstStat\n  try {\n    dstStat = fs.lstatSync(dstpath)\n  } catch {}\n\n  try {\n    const srcStat = fs.lstatSync(srcpath)\n    if (dstStat && areIdentical(srcStat, dstStat)) return\n  } catch (err) {\n    err.message = err.message.replace('lstat', 'ensureLink')\n    throw err\n  }\n\n  const dir = path.dirname(dstpath)\n  const dirExists = fs.existsSync(dir)\n  if (dirExists) return fs.linkSync(srcpath, dstpath)\n  mkdir.mkdirsSync(dir)\n\n  return fs.linkSync(srcpath, dstpath)\n}\n\nmodule.exports = {\n  createLink: u(createLink),\n  createLinkSync\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,YAAlC;;AACA,MAAMC,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMG,EAAE,GAAGH,OAAO,CAAC,aAAD,CAAlB;;AACA,MAAMI,KAAK,GAAGJ,OAAO,CAAC,WAAD,CAArB;;AACA,MAAMK,UAAU,GAAGL,OAAO,CAAC,gBAAD,CAAP,CAA0BK,UAA7C;;AACA,MAAM;EAAEC;AAAF,IAAmBN,OAAO,CAAC,cAAD,CAAhC;;AAEA,SAASO,UAAT,CAAqBC,OAArB,EAA8BC,OAA9B,EAAuCC,QAAvC,EAAiD;EAC/C,SAASC,QAAT,CAAmBH,OAAnB,EAA4BC,OAA5B,EAAqC;IACnCN,EAAE,CAACS,IAAH,CAAQJ,OAAR,EAAiBC,OAAjB,EAA0BI,GAAG,IAAI;MAC/B,IAAIA,GAAJ,EAAS,OAAOH,QAAQ,CAACG,GAAD,CAAf;MACTH,QAAQ,CAAC,IAAD,CAAR;IACD,CAHD;EAID;;EAEDP,EAAE,CAACW,KAAH,CAASL,OAAT,EAAkB,CAACM,CAAD,EAAIC,OAAJ,KAAgB;IAChCb,EAAE,CAACW,KAAH,CAASN,OAAT,EAAkB,CAACK,GAAD,EAAMI,OAAN,KAAkB;MAClC,IAAIJ,GAAJ,EAAS;QACPA,GAAG,CAACK,OAAJ,GAAcL,GAAG,CAACK,OAAJ,CAAYC,OAAZ,CAAoB,OAApB,EAA6B,YAA7B,CAAd;QACA,OAAOT,QAAQ,CAACG,GAAD,CAAf;MACD;;MACD,IAAIG,OAAO,IAAIV,YAAY,CAACW,OAAD,EAAUD,OAAV,CAA3B,EAA+C,OAAON,QAAQ,CAAC,IAAD,CAAf;MAE/C,MAAMU,GAAG,GAAGlB,IAAI,CAACmB,OAAL,CAAaZ,OAAb,CAAZ;MACAJ,UAAU,CAACe,GAAD,EAAM,CAACP,GAAD,EAAMS,SAAN,KAAoB;QAClC,IAAIT,GAAJ,EAAS,OAAOH,QAAQ,CAACG,GAAD,CAAf;QACT,IAAIS,SAAJ,EAAe,OAAOX,QAAQ,CAACH,OAAD,EAAUC,OAAV,CAAf;QACfL,KAAK,CAACmB,MAAN,CAAaH,GAAb,EAAkBP,GAAG,IAAI;UACvB,IAAIA,GAAJ,EAAS,OAAOH,QAAQ,CAACG,GAAD,CAAf;UACTF,QAAQ,CAACH,OAAD,EAAUC,OAAV,CAAR;QACD,CAHD;MAID,CAPS,CAAV;IAQD,CAhBD;EAiBD,CAlBD;AAmBD;;AAED,SAASe,cAAT,CAAyBhB,OAAzB,EAAkCC,OAAlC,EAA2C;EACzC,IAAIO,OAAJ;;EACA,IAAI;IACFA,OAAO,GAAGb,EAAE,CAACsB,SAAH,CAAahB,OAAb,CAAV;EACD,CAFD,CAEE,MAAM,CAAE;;EAEV,IAAI;IACF,MAAMQ,OAAO,GAAGd,EAAE,CAACsB,SAAH,CAAajB,OAAb,CAAhB;IACA,IAAIQ,OAAO,IAAIV,YAAY,CAACW,OAAD,EAAUD,OAAV,CAA3B,EAA+C;EAChD,CAHD,CAGE,OAAOH,GAAP,EAAY;IACZA,GAAG,CAACK,OAAJ,GAAcL,GAAG,CAACK,OAAJ,CAAYC,OAAZ,CAAoB,OAApB,EAA6B,YAA7B,CAAd;IACA,MAAMN,GAAN;EACD;;EAED,MAAMO,GAAG,GAAGlB,IAAI,CAACmB,OAAL,CAAaZ,OAAb,CAAZ;EACA,MAAMa,SAAS,GAAGnB,EAAE,CAACuB,UAAH,CAAcN,GAAd,CAAlB;EACA,IAAIE,SAAJ,EAAe,OAAOnB,EAAE,CAACwB,QAAH,CAAYnB,OAAZ,EAAqBC,OAArB,CAAP;EACfL,KAAK,CAACwB,UAAN,CAAiBR,GAAjB;EAEA,OAAOjB,EAAE,CAACwB,QAAH,CAAYnB,OAAZ,EAAqBC,OAArB,CAAP;AACD;;AAEDoB,MAAM,CAACC,OAAP,GAAiB;EACfvB,UAAU,EAAER,CAAC,CAACQ,UAAD,CADE;EAEfiB;AAFe,CAAjB"},"metadata":{},"sourceType":"script"}